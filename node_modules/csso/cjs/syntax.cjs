'use strict';

const cssTree = require('css-tree');
const compress = require('./compress.cjs');
const specificity = require('./restructure/prepare/specificity.cjs');

function encodeString(value) {
    const stringApostrophe = cssTree.string.encode(value, true);
    const stringQuote = cssTree.string.encode(value);

    return stringApostrophe.length < stringQuote.length
        ? stringApostrophe
        : stringQuote;
}

const syntax = {
    ...cssTree.fork({
        node: {
            String: {
                generate(node) {
                    this.token(cssTree.tokenTypes.String, encodeString(node.value));
                }
            },
            Url: {
                generate(node) {
                    const encodedUrl = cssTree.url.encode(node.value);
                    const string = encodeString(node.value);

                    this.token(cssTree.tokenTypes.Url, encodedUrl.length <= string.length + 5 ? encodedUrl : 'url(' + string + ')');
                }
            }
        }
    }),
    specificity,
    compress
};

exports.syntax = syntax;
